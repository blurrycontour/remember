services:
  backend:
    profiles: ["deploy", "stage"]
    restart: unless-stopped
    # container_name: backend
    image: ${DOCKER_IMAGE_PREFIX}:backend
    build:
      context: '.'
      dockerfile: backend/Dockerfile
      network: host
    # ports:
    #   - 5000:5000
    networks:
      - remember-network
    volumes:
      - ./data:/data
      - ~/.aws:/root/.aws
      - ~/.gcp:/root/.gcp
      - ./certs/mongodb:/etc/ssl/mongodb:ro
    env_file:
      - ./backend/.env
    environment:
      - MONGODB_STRING=${MONGODB_STRING}
      - ENVIRONMENT=${ENVIRONMENT}
      - BUILD_VERSION=${BUILD_VERSION}
    extra_hosts:
      - 'host.docker.internal:host-gateway'


  frontend:
    profiles: ["build"]
    restart: on-failure
    # container_name: frontend
    image: ${DOCKER_IMAGE_PREFIX}:frontend
    build:
      context: '.'
      dockerfile: frontend/Dockerfile
      network: host
    volumes:
      - ./frontend/build:/repo/frontend/build
      - ./frontend/public:/repo/frontend/public
      - ./frontend/src:/repo/frontend/src
    command: ["npm", "start"]
    develop:
      watch:
        - path: ./frontend/src
          action: rebuild
    ports:
      - 3000:3000
    networks:
      - remember-network
    env_file:
      - ./frontend/.env
    extra_hosts:
      - 'host.docker.internal:host-gateway'


  nginx:
    profiles: ["deploy", "stage"]
    restart: unless-stopped
    # container_name: nginx
    image: ${DOCKER_IMAGE_PREFIX}:nginx
    build:
      context: '.'
      dockerfile: nginx/Dockerfile
      network: host
    command:
      - sh
      - -c
      - |
        envsubst '' < /tmp/nginx/nginx.conf > /etc/nginx/nginx.conf
        cat /etc/nginx/nginx.conf
        nginx -g 'daemon off;'
    volumes:
      - ./.logs:/var/log/nginx
    ports:
      - ${NGINX_PORT}:80
    networks:
      - remember-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'


  ngrok:
    profiles: ["deploy"]
    restart: always
    image: ngrok/ngrok
    # container_name: ngrok
    ports:
      - 4040:4040
    command:
      - "start"
      - "nginx"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok/ngrok.yaml:/etc/ngrok.yml
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    networks:
      remember-network:
        ipv4_address: ${NGROK_DOCKER_IP}


  localtunnel:
    profiles: ["deploy"]
    restart: always
    image: ${DOCKER_IMAGE_PREFIX}:localtunnel
    # container_name: localtunnel
    build:
      context: '.'
      dockerfile: localtunnel/Dockerfile
      network: host
    command:
      - "--port"
      - "80"
      - "--local-host"
      - "nginx"
      - "--subdomain"
      - "remember"
    networks:
      - remember-network


  localtonet:
    profiles: ["deploy"]
    restart: always
    image: localtonet/localtonet
    # container_name: localtonet
    command:
      - "authtoken"
      - "${LOCALTONET_AUTHTOKEN}"
    network_mode: "host"


  db-backup:
    profiles: ["deploy"]
    restart: always
    image: ${DOCKER_IMAGE_PREFIX}:db-backup
    # container_name: db-backup
    build:
      context: '.'
      dockerfile: database/Dockerfile
      network: host
      args:
        - MONGODB_STRING=${MONGODB_STRING}
        - BUCKET_NAME=${BUCKET_NAME}
    env_file:
      - ./.env
    volumes:
      - ~/.aws:/root/.aws
      - ~/.gcp:/root/.gcp
      - ./data/mongo/backup:/data/backup


networks:
  remember-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.0.0/16
          gateway: 10.1.0.1
