name: Deploy Database to Cloud

on:
  workflow_dispatch:
    inputs:
      external_ip:
        description: "Server IP Address"
        default: ""
      fresh_deploy:
        description: "Remove existing data"
        default: "false"

env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  SSH_USER: ${{secrets.SSH_USER}}
  SSH_KEY: ${{secrets.SSH_KEY}}
  SSH_IP: ${{ github.event.inputs.external_ip }}
  NGROK_AUTHTOKEN: ${{secrets.NGROK_AUTHTOKEN}}
  AWS_CREDENTIALS: ${{secrets.AWS_CREDENTIALS}}
  GCS_CREDENTIALS: ${{secrets.GCS_CREDENTIALS}}
  MONGO_ROOT_USERNAME: ${{secrets.MONGO_ROOT_USERNAME}}
  MONGO_ROOT_PASSWORD: ${{secrets.MONGO_ROOT_PASSWORD}}
  MONGO_CERT_CA_PEM: ${{secrets.MONGO_CERT_CA_PEM}}
  MONGO_CERT_SERVER_PEM: ${{secrets.MONGO_CERT_SERVER_PEM}}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/repository-name
      - uses: ./.github/actions/setup-ssh-keys
      - uses: ./.github/actions/setup-repository
      - name: Create .env from .env.template file
        run: ssh remote "cd $REPO_NAME; cp .env.template .env"
      - uses: ./.github/actions/setup-server-certificates
      - name: Add mongodb root credentials to .env
        run: |
          ssh remote "
            cd $REPO_NAME
            echo 'MONGODB_PORT=$MONGODB_PORT' >> .env
            echo 'MONGO_ROOT_USERNAME=$MONGO_ROOT_USERNAME' >> .env
            echo 'MONGO_ROOT_PASSWORD=$MONGO_ROOT_PASSWORD' >> .env
          "

        # docker compose stuff
      - name: Pull latest image
        run: ssh remote "cd $REPO_NAME; docker compose -f database/docker-compose.yaml pull"
      - name: Stop existing containers
        run: ssh remote "cd $REPO_NAME; docker compose -f database/docker-compose.yaml down"
      - name: Prune dangling images
        run: ssh remote "docker image prune -f"
      - name: Clean local data files
        if: ${{ github.event.inputs.fresh_deploy == 'true' }}
        run: |
          ssh remote "
            cd $REPO_NAME
            cp -r data/mongo/db data/mongo/db.bak
            sudo rm -rf data/mongo/db/*
          "
      - name: Start containers again
        run: ssh remote "cd $REPO_NAME; docker compose -f database/docker-compose.yaml up -d"
