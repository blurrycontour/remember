name: Deploy Application to Cloud

on:
  workflow_run:
    workflows: [Docker Image CI]
    types: [completed]
    branches: [main]

  workflow_dispatch:

  push:
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  SSH_USER: ${{secrets.SSH_USER}}
  SSH_KEY: ${{secrets.SSH_KEY}}
  SSH_IP: ${{secrets.SSH_IP}}
  NGROK_AUTHTOKEN: ${{secrets.NGROK_AUTHTOKEN}}
  LOCALTONET_AUTHTOKEN: ${{secrets.LOCALTONET_AUTHTOKEN}}
  AWS_CREDENTIALS: ${{secrets.AWS_CREDENTIALS}}
  GCS_CREDENTIALS: ${{secrets.GCS_CREDENTIALS}}
  FIREBASE_CREDENTIALS: ${{secrets.FIREBASE_CREDENTIALS}}
  MONGODB_STRING : ${{secrets.MONGODB_STRING}}
  ENVIRONMENT: ${{secrets.ENVIRONMENT}}
  BUCKET_NAME: ${{secrets.BUCKET_NAME}}

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/repository-name
      - uses: ./.github/actions/setup-ssh-keys
      - uses: ./.github/actions/setup-cloud-credentials
        with:
          add_firebase_credentials: true
      - uses: ./.github/actions/setup-repository
      - name: Get the short commit sha
        run: |
          short_sha=$(git rev-parse --short $GITHUB_SHA)
          echo "COMMIT_SHORT_SHA=$short_sha" >> $GITHUB_ENV
          echo "COMMIT_SHORT_SHA=$short_sha"
      - name: Create .env from .env.template file
        run: ssh remote "cd $REPO_NAME; cp .env.template .env"
      - name: Add ngrok authtoken to .env
        run: ssh remote "cd $REPO_NAME; echo 'NGROK_AUTHTOKEN=$NGROK_AUTHTOKEN' >> .env"
      - name: Add localtonet authtoken to .env
        run: ssh remote "cd $REPO_NAME; echo 'LOCALTONET_AUTHTOKEN=$LOCALTONET_AUTHTOKEN' >> .env"
      - name: Add mongodb credentials to .env
        run: |
          ssh remote "
            cd $REPO_NAME
            echo 'MONGODB_STRING=$MONGODB_STRING' >> .env
            echo 'ENVIRONMENT=$ENVIRONMENT' >> .env
            echo 'BUILD_VERSION=${{ env.COMMIT_SHORT_SHA }}' >> .env
          "
      - name: Add bucket name to .env
        run: ssh remote "cd $REPO_NAME; echo 'BUCKET_NAME=$BUCKET_NAME' >> .env"
      - name: Pull latest images
        run: ssh remote "cd $REPO_NAME; docker compose --profile deploy pull"
      - name: Stop existing containers
        run: ssh remote "cd $REPO_NAME; docker compose --profile '*' down"
      - name: Prune dangling images
        run: ssh remote "docker image prune -f"
      - name: Start containers again
        run: ssh remote "cd $REPO_NAME; docker compose --profile deploy up -d"


  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/repository-name
      - uses: ./.github/actions/setup-ssh-keys
      - name: Set git tag as build version
        run: ssh remote "cd $REPO_NAME; echo 'BUILD_VERSION=${{ github.ref_name }}' >> .env"
      - name: Stop 'backend' container
        run: ssh remote "cd $REPO_NAME; docker compose --profile deploy down backend"
      - name: Start 'backend' container again
        run: ssh remote "cd $REPO_NAME; docker compose --profile deploy up -d backend"
